# define TEST_BG 0x000000FF
# define TEST_PLANEF (t_vector){0, 0, 15}, (t_vector){0, 0, -1}, RGBA(COLOR_NAVY)
# define TEST_PLANEB (t_vector){0, 0, -15}, (t_vector){0, 0, 1}, RGBA(COLOR_NAVY)
# define TEST_PLANEU (t_vector){0, 15, 0}, (t_vector){0, -1, 0}, RGBA(COLOR_NEON_GREEN)
# define TEST_PLANED (t_vector){0, -15, 0}, (t_vector){0, 1, 0}, RGBA(COLOR_NEON_GREEN)
# define TEST_PLANER (t_vector){15, 0, 0}, (t_vector){-1, 0, 0}, RGBA(COLOR_NAVY)
# define TEST_PLANEL (t_vector){-15, 0, 0}, (t_vector){1, 0, 0}, RGBA(COLOR_NAVY)
# define TEST_CYLINDER (t_vector){0, 0, 5}, (t_vector){0, 0, 1}, 4, 6, RGBA(COLOR_NEON_PINK)
# define TEST_SPHERE2 (t_vector){0, 0, 15}, 21, RGBA(COLOR_PINK)
# define TEST_SPHERE (t_vector){4, 2, 5}, 4, RGBA(COLOR_BLACK)
# define TEST_SPHERE4 (t_vector){-4, 2, 5}, 4, RGBA(COLOR_BLACK)
# define TEST_SPHERE3 (t_vector){0, -2, 5}, 2, RGBA(COLOR_RED)
//test cam
# define TEST_CAM_POS (t_vector){0, 0.8, -22}
# define TEST_CAM_DIR (t_vector){0, -0.2, 1}
# define TEST_FOV 80.0
# define FOV_STEP 10.0
# define MIN_FOV 10.0
# define MAX_FOV 170.0

# define PAN_AMOUNT M_PI / 14
# define MOVE_SPEED 3.0

# define TEST_LIGHT (t_vector){0, 13, 0}, RGBA(COLOR_PASTEL_BLUE), 1.0
# define TEST_LIGHT2 (t_vector){0, -7, -8}, RGBA(COLOR_PASTEL_ORANGE), 1.0
# define TEST_LIGHT3 (t_vector){10, 10, 0}, RGBA(COLOR_GREEN), 1.0

# define TEST_AMBIENT_COL RGBA(COLOR_RED)
# define TEST_AMBIENT_INT 0.2

// HAPPY (centered around x = 0)
# define LH1 (t_vector){-12, 3, 0}, (t_vector){-12, 10, 0}, RGBA(TEXT_COLOR)
# define LH2 (t_vector){-12, 7, 0}, (t_vector){-9, 7, 0}, RGBA(TEXT_COLOR)
# define LH3 (t_vector){-9, 3, 0}, (t_vector){-9, 10, 0}, RGBA(TEXT_COLOR)

# define LA1 (t_vector){-7, 3, 0}, (t_vector){-5.5, 10, 0}, RGBA(TEXT_COLOR)
# define LA2 (t_vector){-5.5, 10, 0}, (t_vector){-4, 3, 0}, RGBA(TEXT_COLOR)
# define LA3 (t_vector){-6.25, 6.5, 0}, (t_vector){-4.75, 6.5, 0}, RGBA(TEXT_COLOR)

# define LP1 (t_vector){-2, 3, 0}, (t_vector){-2, 10, 0}, RGBA(TEXT_COLOR)
# define LP2 (t_vector){-2, 10, 0}, (t_vector){0, 10, 0}, RGBA(TEXT_COLOR)
# define LP3 (t_vector){0, 10, 0}, (t_vector){0, 6.5, 0}, RGBA(TEXT_COLOR)
# define LP4 (t_vector){0, 6.5, 0}, (t_vector){-2, 6.5, 0}, RGBA(TEXT_COLOR)

# define LP5 (t_vector){2, 3, 0}, (t_vector){2, 10, 0}, RGBA(TEXT_COLOR)
# define LP6 (t_vector){2, 10, 0}, (t_vector){4, 10, 0}, RGBA(TEXT_COLOR)
# define LP7 (t_vector){4, 10, 0}, (t_vector){4, 6.5, 0}, RGBA(TEXT_COLOR)
# define LP8 (t_vector){4, 6.5, 0}, (t_vector){2, 6.5, 0}, RGBA(TEXT_COLOR)

# define LY1 (t_vector){6, 10, 0}, (t_vector){8, 6.5, 0}, RGBA(TEXT_COLOR)
# define LY2 (t_vector){8, 6.5, 0}, (t_vector){8, 3, 0}, RGBA(TEXT_COLOR)
# define LY3 (t_vector){10, 10, 0}, (t_vector){8, 6.5, 0}, RGBA(TEXT_COLOR)

// BIRTHDAY (centered around x = 0, moved down)
# define LB1 (t_vector){-17, -3, 0}, (t_vector){-17, -10, 0}, RGBA(TEXT_COLOR)
# define LB2 (t_vector){-17, -3, 0}, (t_vector){-15, -3, 0}, RGBA(TEXT_COLOR)
# define LB3 (t_vector){-15, -3, 0}, (t_vector){-15, -6.5, 0}, RGBA(TEXT_COLOR)
# define LB4 (t_vector){-15, -6.5, 0}, (t_vector){-17, -6.5, 0}, RGBA(TEXT_COLOR)
# define LB5 (t_vector){-17, -6.5, 0}, (t_vector){-15, -6.5, 0}, RGBA(TEXT_COLOR)
# define LB6 (t_vector){-15, -6.5, 0}, (t_vector){-15, -10, 0}, RGBA(TEXT_COLOR)
# define LB7 (t_vector){-15, -10, 0}, (t_vector){-17, -10, 0}, RGBA(TEXT_COLOR)

# define LI1 (t_vector){-13, -3, 0}, (t_vector){-13, -10, 0}, RGBA(TEXT_COLOR)

# define LR1 (t_vector){-11, -3, 0}, (t_vector){-11, -10, 0}, RGBA(TEXT_COLOR)
# define LR2 (t_vector){-11, -3, 0}, (t_vector){-9, -3, 0}, RGBA(TEXT_COLOR)
# define LR3 (t_vector){-9, -3, 0}, (t_vector){-9, -6.5, 0}, RGBA(TEXT_COLOR)
# define LR4 (t_vector){-9, -6.5, 0}, (t_vector){-11, -6.5, 0}, RGBA(TEXT_COLOR)
# define LR5 (t_vector){-11, -6.5, 0}, (t_vector){-9, -10, 0}, RGBA(TEXT_COLOR)

# define LT1 (t_vector){-7, -3, 0}, (t_vector){-5, -3, 0}, RGBA(TEXT_COLOR)
# define LT2 (t_vector){-6, -3, 0}, (t_vector){-6, -10, 0}, RGBA(TEXT_COLOR)

# define LH4 (t_vector){-3, -3, 0}, (t_vector){-3, -10, 0}, RGBA(TEXT_COLOR)
# define LH5 (t_vector){-3, -6.5, 0}, (t_vector){-1, -6.5, 0}, RGBA(TEXT_COLOR)
# define LH6 (t_vector){-1, -3, 0}, (t_vector){-1, -10, 0}, RGBA(TEXT_COLOR)

# define LD1 (t_vector){1, -3, 0}, (t_vector){1, -10, 0}, RGBA(TEXT_COLOR)
# define LD2 (t_vector){1, -3, 0}, (t_vector){3, -3, 0}, RGBA(TEXT_COLOR)
# define LD3 (t_vector){3, -3, 0}, (t_vector){3, -10, 0}, RGBA(TEXT_COLOR)
# define LD4 (t_vector){1, -10, 0}, (t_vector){3, -10, 0}, RGBA(TEXT_COLOR)

# define LA5 (t_vector){5, -10, 0}, (t_vector){6.5, -3, 0}, RGBA(TEXT_COLOR)
# define LA6 (t_vector){6.5, -3, 0}, (t_vector){8, -10, 0}, RGBA(TEXT_COLOR)
# define LA7 (t_vector){5.75, -6.5, 0}, (t_vector){7.25, -6.5, 0}, RGBA(TEXT_COLOR)

# define LY4 (t_vector){10, -3, 0}, (t_vector){12, -6.5, 0}, RGBA(TEXT_COLOR)
# define LY5 (t_vector){12, -6.5, 0}, (t_vector){12, -10, 0}, RGBA(TEXT_COLOR)
# define LY6 (t_vector){14, -3, 0}, (t_vector){12, -6.5, 0}, RGBA(TEXT_COLOR)

	// // HAPPY
	// make_aabb_line(&rtx()->shapes, LH1, LINE);
	// make_aabb_line(&rtx()->shapes, LH2, LINE);
	// make_aabb_line(&rtx()->shapes, LH3, LINE);

	// make_aabb_line(&rtx()->shapes, LA1, LINE);
	// make_aabb_line(&rtx()->shapes, LA2, LINE);
	// make_aabb_line(&rtx()->shapes, LA3, LINE);

	// make_aabb_line(&rtx()->shapes, LP1, LINE);
	// make_aabb_line(&rtx()->shapes, LP2, LINE);
	// make_aabb_line(&rtx()->shapes, LP3, LINE);
	// make_aabb_line(&rtx()->shapes, LP4, LINE);

	// make_aabb_line(&rtx()->shapes, LP5, LINE);
	// make_aabb_line(&rtx()->shapes, LP6, LINE);
	// make_aabb_line(&rtx()->shapes, LP7, LINE);
	// make_aabb_line(&rtx()->shapes, LP8, LINE);

	// make_aabb_line(&rtx()->shapes, LY1, LINE);
	// make_aabb_line(&rtx()->shapes, LY2, LINE);
	// make_aabb_line(&rtx()->shapes, LY3, LINE);

	// // BIRTHDAY
	// make_aabb_line(&rtx()->shapes, LB1, LINE);
	// make_aabb_line(&rtx()->shapes, LB2, LINE);
	// make_aabb_line(&rtx()->shapes, LB3, LINE);
	// make_aabb_line(&rtx()->shapes, LB4, LINE);
	// make_aabb_line(&rtx()->shapes, LB5, LINE);
	// make_aabb_line(&rtx()->shapes, LB6, LINE);
	// make_aabb_line(&rtx()->shapes, LB7, LINE);

	// make_aabb_line(&rtx()->shapes, LI1, LINE);

	// make_aabb_line(&rtx()->shapes, LR1, LINE);
	// make_aabb_line(&rtx()->shapes, LR2, LINE);
	// make_aabb_line(&rtx()->shapes, LR3, LINE);
	// make_aabb_line(&rtx()->shapes, LR4, LINE);
	// make_aabb_line(&rtx()->shapes, LR5, LINE);

	// make_aabb_line(&rtx()->shapes, LT1, LINE);
	// make_aabb_line(&rtx()->shapes, LT2, LINE);

	// make_aabb_line(&rtx()->shapes, LH4, LINE);
	// make_aabb_line(&rtx()->shapes, LH5, LINE);
	// make_aabb_line(&rtx()->shapes, LH6, LINE);

	// make_aabb_line(&rtx()->shapes, LD1, LINE);
	// make_aabb_line(&rtx()->shapes, LD2, LINE);
	// make_aabb_line(&rtx()->shapes, LD3, LINE);
	// make_aabb_line(&rtx()->shapes, LD4, LINE);

	// make_aabb_line(&rtx()->shapes, LA5, LINE);
	// make_aabb_line(&rtx()->shapes, LA6, LINE);
	// make_aabb_line(&rtx()->shapes, LA7, LINE);

	// make_aabb_line(&rtx()->shapes, LY4, LINE);
	// make_aabb_line(&rtx()->shapes, LY5, LINE);
	// make_aabb_line(&rtx()->shapes, LY6, LINE);